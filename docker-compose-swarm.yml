version: "3.8"

services:
  config-service:
    image: 721431533455.dkr.ecr.ap-southeast-2.amazonaws.com/config-service:${CONFIG_SERVICE_IMAGE}
    platform: linux/amd64
    # Removed container_name as it's incompatible with scaling in Swarm
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=ap-southeast-2
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 2  # Added 2 replicas for config-service
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  catalog-service:
    image: 721431533455.dkr.ecr.ap-southeast-2.amazonaws.com/catalog-service:${CATALOG_SERVICE_IMAGE}
    platform: linux/amd64
    # Removed container_name as it's incompatible with scaling in Swarm
    environment:
      - SPRING_PROFILES_ACTIVE=local
    ports:
      - "8080:8080"  # This will be load-balanced by Swarm
    deploy:
      replicas: 3  # Already configured for 3 replicas
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    # Removed container_name as it's incompatible with scaling in Swarm
    ports:
      - "5672:5672"    # AMQP port for Spring Cloud Bus
      - "15672:15672"  # Management UI port for inspection
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    deploy:
      replicas: 1  # Only need one instance of RabbitMQ
      restart_policy:
        condition: on-failure
    networks:
      - app-network

networks:
  app-network:
    driver: overlay  # Changed from bridge to overlay for Swarm support